---
- name: Install Zsh, Tmux, Lvim, and default configs for user
  hosts: all
  vars_files:
    - alias_list.yml

  tasks:
    # Package cache update
    - name: Update package cache (APT)
      become: true
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"
      tags:
        - apt
        - update

    - name: Update package cache (YUM/DNF)
      become: true
      dnf:
        update_cache: yes
      when: ansible_os_family == "RedHat"
      tags:
        - yum
        - update

    # Install common development packages
    - name: Install dev packages (APT)
      become: true
      apt:
        name:
          - git
          - zsh
          - tmux
          - build-essential
          - libfuse2
          - nodejs
          - npm
        state: present
      when: ansible_os_family == "Debian"
      tags:
        - apt
        - packages

    - name: Install dev packages (YUM/DNF)
      become: true
      package:
        name:
          - git
          - zsh
          - tmux
          - "@Development Tools"
          - fuse-libs
          - nodejs
          - npm
          - fuse
        state: present
      when: ansible_os_family == "RedHat"
      tags:
        - yum
        - packages

    # Install Python development packages
    - name: Install python dev packages (APT)
      become: true
      apt:
        name:
          - python3-pip
          - python3-venv
          - python3.10
          - python3.10-venv
          - python3.10-full
          - python3.10-dev
        state: present
      when: ansible_os_family == "Debian"
      tags:
        - apt
        - python

    - name: Install python dev packages (YUM/DNF)
      become: true
      package:
        name:
          - python3-pip
          - python3-virtualenv
          - python3.10
          - python3.10-devel
        state: present
      when: ansible_os_family == "RedHat"
      tags:
        - yum
        - python

    # Oh My Zsh installation
    - name: Check if Oh My Zsh is installed
      stat:
        path: ~/.oh-my-zsh
      register: omz_exists
      ignore_errors: true
      tags:
        - zsh

    - name: Install Oh My Zsh
      when: omz_exists.stat.exists is false
      shell: curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | sh
      tags:
        - zsh

    # Setting Zsh as default shell
    - name: Ensure Zsh is the default shell
      ansible.builtin.user:
        name: "{{ ansible_env.USER }}"
        shell: /usr/bin/zsh
      become: true
      tags:
        - zsh

    # Configuration files copy
    - name: Copy .gitconfig for user
      copy:
        src: .gitconfig
        dest: "{{ ansible_env.HOME }}/.gitconfig"
      tags:
        - conf

    - name: Copy .tmux.conf for user
      copy:
        src: .tmux.conf
        dest: "{{ ansible_env.HOME }}/.tmux.conf"
      tags:
        - conf

    # Rust and Cargo installation
    - name: Check if Cargo is installed
      shell: command -v cargo
      register: cargo_exists
      ignore_errors: true
      tags:
        - rust

    - name: Download Rust Installer
      when: cargo_exists is failed
      get_url:
        url: https://sh.rustup.rs
        dest: /tmp/sh.rustup.rs
        mode: '0755'
        force: 'yes'
      tags:
        - rust

    - name: Install Rust/Cargo
      when: cargo_exists is failed
      shell: /tmp/sh.rustup.rs -y
      tags:
        - rust

    # Neovim installation
    - name: Check if Neovim is installed
      shell: command -v nvim
      register: nvim_exists
      ignore_errors: true
      tags:
        - neovim

    - name: Install Neovim from latest stable release
      when: nvim_exists is failed
      get_url:
        url: "https://github.com/neovim/neovim/releases/latest/download/nvim.appimage"
        dest: /tmp/nvim.appimage
        mode: '0755'
      tags:
        - neovim

    - name: Make Neovim executable
      when: nvim_exists is failed
      become: true
      file:
        src: /tmp/nvim.appimage
        dest: /usr/local/bin/nvim
        state: link
      tags:
        - neovim

    # LunarVim installation
    - name: Check if LunarVim is installed
      stat:
        path: ~/.local/bin/lvim
      register: lvim_exists
      ignore_errors: true
      tags:
        - lvim

    - name: Download LunarVim installer
      when: lvim_exists.stat.exists is false
      get_url:
        url: https://raw.githubusercontent.com/LunarVim/LunarVim/master/utils/installer/install.sh
        dest: /tmp/install-lunarvim.sh
        mode: 0755
      tags:
        - lvim

    - name: Install LunarVim
      when: lvim_exists.stat.exists is false
      command: /tmp/install-lunarvim.sh --install-dir $HOME/.local/bin -y --overwrite
      environment: 
        PATH: "{{ ansible_env.PATH }}:~/.cargo/bin/"
      tags:
        - lvim

    # Path configuration
    - name: Add ~/.local/bin to user's PATH
      lineinfile:
        dest: "{{ ansible_env.HOME }}/.zshrc"
        insertafter: EOF
        line: 'export PATH=$PATH:~/.local/bin'
      when: "'~/.local/bin' not in lookup('env','PATH')"
      tags:
        - zsh
        - path

    # Aliases configuration
    - name: Add aliases to zshrc
      lineinfile:
        dest: "{{ ansible_env.HOME }}/.zshrc"
        line: "alias {{ item.key }}='{{ item.value }}'"
        insertbefore: EOF
      with_dict: "{{ zsh_aliases }}"
      tags:
        - zsh
        - aliases
