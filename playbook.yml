---
- name: Install Zsh, Tmux, Lvim, and defaults config for user
  hosts: all
  vars_files:
    - alias_list.yml

  tasks:
    - name: Add deadsnakes PPA
      become: true
      apt_repository:
        repo: ppa:deadsnakes/ppa
        state: present
        update_cache: yes

    - name: Update package cache
      become: true
      apt:
        update_cache: yes

    - name: Install dev apt packages 
      become: true
      apt:
        name:
          - git
          - zsh
          - tmux
          - build-essential
          - libfuse2
          - nodejs
          - npm
        state: present

    - name: Install python dev apt packages 
      become: true
      apt:
        name:
          - python3-pip
          - python3-venv
          - python3.11
          - python3.11-venv
          - python3.11-full
          - python3.11-dev
        state: present
      tags:
        - python

    - name: check if oh-my-zsh is installed
      stat:
        path: ~/.oh-my-zsh
      register: omz_exists
      ignore_errors: true
      tags:
        - zsh

    - name: Install Oh My Zsh
      when: omz_exists.stat.exists is false
      shell: curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | sh
      tags:
        - zsh

    - name: Ensure zsh is the default shell
      ansible.builtin.user:
        name: "{{ ansible_env.USER }}"
        shell: /usr/bin/zsh 
      become: true
      tags:
        - zsh

    - name: Copy .gitconfig for user 
      copy:
        src: .gitconfig 
        dest: "{{ ansible_env.HOME }}/.gitconfig"
      tags:
        - conf

    - name: Copy .tmux.conf for user 
      copy:
        src: .tmux.conf 
        dest: "{{ ansible_env.HOME }}/.tmux.conf"
      tags:
        - conf

    - name: Copy .gitconfig for user 
      copy:
        src: .gitconfig 
        dest: "{{ ansible_env.HOME }}/.gitconfig"
      tags:
        - conf

    - name: check if cargo is installed
      shell: command -v cargo
      register: cargo_exists
      ignore_errors: true
      tags:
        - rust

    - name: Download Installer
      when: cargo_exists is failed
      get_url:
        url: https://sh.rustup.rs
        dest: /tmp/sh.rustup.rs
        mode: '0755'
        force: 'yes'
      tags:
        - rust
        - vim

    - name: install rust/cargo
      when: cargo_exists is failed
      shell: /tmp/sh.rustup.rs -y
      tags:
        - rust
        - vim

    - name: check if nvim is installed
      shell: command -v nvim
      register: nvim_exists
      ignore_errors: true
      tags:
        - vim

    - name: Install Neovim from latest stable release
      when: nvim_exists is failed
      get_url:
        url: "https://github.com/neovim/neovim/releases/latest/download/nvim.appimage"
        dest: /tmp/nvim.appimage
        mode: '0755'
      tags:
        - vim

    - name: Make Neovim executable
      when: nvim_exists is failed
      become: true
      file:
        src: /tmp/nvim.appimage
        dest: /usr/local/bin/nvim
        state: link
      tags:
        - vim

    - name: check if lvim is installed
      stat:
        path: ~/.local/bin/lvim
      register: lvim_exists
      ignore_errors: true
      tags:
        - vim

    - name: Download LunarVim installer
      when: lvim_exists.stat.exists is false
      get_url:
        url: https://raw.githubusercontent.com/LunarVim/LunarVim/release-1.3/neovim-0.9/utils/installer/install.sh
        dest: /tmp/install-lunarvim.sh
        mode: 0755
      tags:
        - vim

    - name: Install LunarVim
      when: lvim_exists.stat.exists is false
      command: /tmp/install-lunarvim.sh --install-dir $HOME/.lunarvim -y --overwrite 
      environment: 
        PATH: "{{ ansible_env.PATH }}:~/.cargo/bin/"
      tags:
        - vim

    - name: Add ~/.local/bin to user's PATH
      lineinfile:
        dest: "{{ ansible_env.HOME }}/.zshrc"
        insertafter: EOF
        line: 'export PATH=$PATH:~/.local/bin'
      when: "'~/.local/bin' not in lookup('env','PATH')"
      tags:
        - vim

    - name: Copy lvim config
      when: lvim_exists.stat.exists is false
      copy:
        src: config.lua 
        dest: "{{ ansible_env.HOME }}/.config/lvim/config.lua"
      tags:
        - vim

    - name: check if kubectl is installed
      stat:
        path: /usr/local/bin/kubectl
      register: kubectl_exists
      ignore_errors: true
      tags:
        - kube

    - name: Get the latest kubectl version
      when: kubectl_exists.stat.exists is false
      shell: curl -L -s https://dl.k8s.io/release/stable.txt
      register: kubectl_version
      become: true
      tags:
        - kube

    - name: Download kubectl binary
      when: kubectl_exists.stat.exists is false
      get_url:
        url: "https://dl.k8s.io/release/{{ kubectl_version.stdout }}/bin/linux/amd64/kubectl"
        dest: /usr/local/bin/kubectl
        mode: '0755'
      become: true
      tags:
        - kube

    - name: Add aliases to zshrc
      lineinfile:
        dest: ~/.zshrc
        line: "alias {{ item.key }}='{{ item.value }}'"
        insertbefore: EOF
      with_dict: "{{ zsh_aliases }}"
      tags:
        - conf